{
  "hash": "a0f6d6c3c4dc8a494dfde9d78fcd80c5",
  "result": {
    "engine": "knitr",
    "markdown": "# Supplementary Text Figures {#sec-suppl-figure}\n\nThis chapter demonstrates the `R` codes that make supplementary text figures shown in the paper. \nMaking the main figures are shown in @sec-main-figure.\n\n## Supplementary Text Figure A {#sec-si-figure-a}\n![](static/figure/cfRNA.SI.FigA.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  lazyLoad(\"downsample.chrY.TPM_cache/beamer/load_ds_salmon_4b8dd727729fd0ae5deb423d69e7c16d\") # dl.chrY.TPM and dl.stat\n\n  dt.ds.chrY <- lapply(names(dl.stat), function(DS) dl.stat[[DS]][,DS:=DS]) %>% rbindlist\n  dt.ds.chrY$DS<-factor(dt.ds.chrY$DS, level=c(\"1M\",\"5M\",\"10M\"))\n  dt.ds.chrY[,GA:=gsub(\" weeks\",\"wk\",GA)]\n  setnames(dt.ds.chrY, \"Type\", \"Method\")\n\n  p1.chrY<-ggplot(dt.ds.chrY, aes(Method,SumCount)) +\n  geom_rect(data = dt.ds.chrY[DS==\"5M\"],fill=\"grey60\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_bar(aes(fill=Method), stat=\"identity\",width=.5, alpha=.7) +\n  ggsci::scale_fill_jama() +\n  facet_grid(Sex~DS+GA,scales=\"free\") +\n  labs(y=\"Sum of read count on chrY genes\") +\n  theme_Publication() +\n  theme(legend.position=\"top\",\n        panel.border=element_rect(colour=\"black\"),\n        axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n  #\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1A.pdf\", width=11, height=8, title=\"Abundance of chrY\")\n  p1.chrY\n  dev.off()\n```\n:::\n\n\n## Supplementary Text Figure B {#sec-si-figure-b}\n![](static/figure/cfRNA.SI.FigB.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  lazyLoad(\"downsample.chrY.TPM_cache/beamer/load_ds_salmon_4b8dd727729fd0ae5deb423d69e7c16d\") # dl.chrY.TPM and dl.stat\n\n  lapply(dl.chrY.TPM, function(i) i[,.(sum(Counts),sum(TPM))])\n\n  dl.chrY.TPM<-lapply(dl.chrY.TPM, function(DT) {\n                  #DT[Sex==\"Male\",Class:=ifelse(TPM>0,\"TP\",\"FN\")]\n                  #DT[Sex==\"Female\",Class:=ifelse(TPM==0,\"TN\",\"FP\")] \n                  DT[,`Predicted Sex`:=ifelse(TPM>0, \"Male\",\"Female\"),Type]\n                  DT$Sex<-factor(DT$Sex, level=c(\"Male\",\"Female\"))\n                  DT$`Predicted Sex`<-factor(DT$`Predicted Sex`, level=c(\"Male\",\"Female\"))\n                  DT \n  }) \n\n  #####################################\n  # Predictive performance by DS & GA #\n  #####################################\n  dt.chrY.con.ga<-lapply(names(dl.chrY.TPM), function(DS){\n    lapply(split(dl.chrY.TPM[[DS]], dl.chrY.TPM[[DS]]$GA), function(DT){\n    my.GA<-DT[,.N,GA]$GA\n\n    cm1<-caret::confusionMatrix(DT[Type==\"HiSat2+Salmon\"][[\"Predicted Sex\"]], reference=DT[Type==\"HiSat2+Salmon\"][[\"Sex\"]])\n    cm2<-caret::confusionMatrix(DT[Type==\"Salmon (SA mode)\"][[\"Predicted Sex\"]], reference=DT[Type==\"Salmon (SA mode)\"][[\"Sex\"]])\n\n    rbind(\n    data.table(DS=DS, GA=my.GA,Type=\"HiSat2+Salmon\", Measure=names(cm1$byClass), Value=cm1$byClass),\n    data.table(DS=DS, GA=my.GA,Type=\"Salmon (SA mode)\", Measure=names(cm2$byClass), Value=cm2$byClass)\n    )[Measure %in% c(\"F1\",\"Precision\", \"Recall\")]\n    }) %>% rbindlist \n  }) %>% rbindlist \n\n  dt.chrY.con.ga$DS<-factor(dt.chrY.con.ga$DS, level=c(\"1M\",\"5M\",\"10M\"))\n  dt.chrY.con.ga[,GA:=gsub(\" weeks\",\"wk\",GA)]\n  setnames(dt.chrY.con.ga, \"Type\", \"Method\")\n\n  p1.chrY.con<-ggplot(dt.chrY.con.ga, aes(Method,Value)) +\n  geom_rect(data = dt.chrY.con.ga[DS==\"5M\"],fill=\"grey60\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_bar(aes(fill=Method), stat=\"identity\",width=.5, alpha=.7) +\n  ggsci::scale_fill_jama() +\n  facet_grid(Measure~DS+GA,scales=\"free\") +\n  labs(y=\"Score\") +\n  theme_Publication() +\n  theme(legend.position=\"none\",\n        panel.border=element_rect(colour=\"black\"),\n        axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\n  # merge SI.Fig1A + SI.Fig1B\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1AB.pdf\", width=11, height=14, title=\"Abundance of chrY\")\n  cowplot::plot_grid(p1.chrY, p1.chrY.con, labels=\"AUTO\", ncol=1, label_size=27, align=\"v\", axis=\"l\")\n  dev.off()\n```\n:::\n\n\n## Supplementary Text Figure C {#sec-si-figure-c}\n![](static/figure/cfRNA.SI.FigC.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # load the transcript definition used in Salmon (SA)\n  load(\"RData/gr.ensg.Homo_sapiens.GRCh38.88.cdna.all.ncrna.fa.gz.RData\") %>% system.time # isa GRanges\n  gr.ensg[seqnames(gr.ensg)==\"Y\" & gr.ensg$gene_biotype==\"protein_coding\",] # chrY protein-coding; n=42 \n  this.gene<-(gr.ensg[seqnames(gr.ensg)==\"Y\" & gr.ensg$gene_biotype==\"protein_coding\",] %>% names) # chrY protein-coding; n=42 (without the training version e.g. ENSG00000176679)\n\n  # load the TPM based om 10M-ds dataset\n  load(\"RData/li.TPM.10M.RData\")\n  li.TPM[[\"Salmon_aln\"]][[\"TPM\"]] %>% dim # 62803 genes x 100 samples\n\n  ## Heatamp of TPM using `HiSat2+Salmon` (based on 10M)\n  li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev # count of 42 chrY genes\n  filter.g2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev >0 # filter for 42 chrY genes with TPM >0\n  this.gene2<-(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev)[filter.g2] %>% names # n=24 genes\n  this.sample2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev %>% names # n=100 samples sorted \n  filter.s2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene2,] %>% colSums %>% sort %>% rev >0 # filter for samples with TPM >0 \n  predicted.male2<-(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s2] %>% names # n=60 samples \n\n  my.mat2<-log2(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene2,this.sample2]+1)\n  rownames(my.mat2)<-gr.ensg[this.gene2]$gene_name\n\n  col.anno<-mat.samples[this.sample2,c(\"GA\",\"Sex\"),drop=F] # isa `data.frame`\n  col.anno$\"Predicted Sex\"<-ifelse(this.sample2 %in% predicted.male2,\"Male\",\"Female\")\n  col.anno<-col.anno[,c(\"Predicted Sex\",\"Sex\",\"GA\")]\n\n  GA.color<-ggsci::pal_jama(\"default\",alpha=.9)(4)\n  names(GA.color)<-c(\"12wk\",\"20wk\",\"28wk\",\"36wk\")\n  my.color=list(\n      `Sex`=c(Female=\"hotpink\",Male='skyblue'),\n      `Predicted Sex`=c(Female=\"hotpink3\",Male='skyblue3'),\n      #`GA`=c(\"12wk\"=cbPalette2[1],\"20wk\"=cbPalette2[2],\"28wk\"=cbPalette2[3],\"36wk\"=cbPalette2[4])\n      `GA`=GA.color\n  )\n\n  cph1<-ComplexHeatmap::pheatmap(my.mat2,\n                                 annotation_col=col.anno, \n                                 annotation_colors=my.color, \n                                 cluster_cols=F,\n                                 cluster_rows=F,\n                                 show_colnames=F,\n                                 border_color=NA,\n                                 fontsize=12,\n                                 name=\"log2(count)\",\n                                 row_title=\"\\nHiSat2+Salmon\",\n                                 row_title_gp = gpar(fontsize = 20),\n  )\n\n  filter.g3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev >0 # filter for 42 chrY genes with count >0\n  this.gene3<-(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev)[filter.g3] %>% names # n=16 genes (out of 42) >0 count \n  this.sample3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev %>% names # 100 sample names\n  filter.s3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene3,] %>% colSums %>% sort %>% rev >0 # samples with count>0 \n  #(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s3] # n=38 samples with count>0 (predicted as Male)\n  predicted.male3<-(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s3] %>% names # n=38 samples with count>0 (predicted as Male)\n\n  my.mat3<-log2(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene3,this.sample3]+1)\n  rownames(my.mat3)<-gr.ensg[this.gene3]$gene_name\n\n  col.anno3<-mat.samples[this.sample3,c(\"GA\",\"Sex\"),drop=F]\n  col.anno3$\"Predicted Sex\"<-ifelse(this.sample3 %in% predicted.male3,\"Male\",\"Female\")\n  col.anno3<-col.anno3[,c(\"Predicted Sex\",\"Sex\",\"GA\")]\n\n  # via ComplexHeatmap\n  cph3<-ComplexHeatmap::pheatmap(my.mat3,\n                                 annotation_col=col.anno3, \n                                 annotation_colors=my.color, \n                                 cluster_cols=F,\n                                 cluster_rows=F,\n                                 show_colnames=F,\n                                 border_color=NA,\n                                 fontsize=12,\n                                 name=\"log2(count)\",\n                                 row_title=\"\\nSalmon (SA mode)\",\n                                 row_title_gp = gpar(fontsize = 20),\n                                 heatmap_legend_param = list(\n                                                            title_gp=gpar(fontsize=13,fontface=\"bold\"),\n                                                            labels_gp=gpar(fontsize=11),\n                            annotation_legend_param = list(title_gp=gpar(fontsize=13,fontface=\"bold\"),labels_gp = gpar(fontsize = 11))\n                                )\n  )\n\n\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1C.pdf\", width=11, height=14, title=\"Abundance of chrY\")\n  draw(cph1 %v% cph3, main_heatmap=\"log2(count)\", ht_gap=unit(.7,\"cm\"), auto_adjust=F)\n  grid.text(label=\"C\",gp=gpar(fontsize=27,fontface=\"bold\"),x=0.02,y=.99,just=\"top\")\n  dev.off()\n```\n:::\n\n\n## Supplementary Text Figure D {#sec-si-figure-d}\n![](static/figure/cfRNA.SI.FigD.png)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  dl.chrY.TPM %>% names\n\n  # load the TPM based om 10M-ds dataset\n  load(\"RData/li.TPM.10M.trim.RData\")\n  li.TPM[[\"Salmon\"]][[\"TPM\"]] %>% dim # 59354 genes x 100 samples\n\n  dt.trim.10M<-data.table(\n      `Type`=\"Salmon (SA mode)\",\n      `SampleID`=li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% names,\n      `Counts`=li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums, \n      `TPM`=li.TPM[[\"Salmon\"]][[\"TPM\"]][this.gene,] %>% colSums \n      )\n  # add Sex and GA\n  dt.trim.10M<-merge(dt.trim.10M, dt.samples[,.(SampleID,GA,Sex,pn_female)])\n\n  dt.trim.10M[,`Predicted Sex`:=ifelse(TPM>0, \"Male\",\"Female\"),Type]\n  dt.trim.10M$Sex<-factor(dt.trim.10M$Sex, level=c(\"Male\",\"Female\"))\n  dt.trim.10M$`Predicted Sex`<-factor(dt.trim.10M$`Predicted Sex`, level=c(\"Male\",\"Female\"))\n\n  dt.chrY.trim<-rbind(\n        dl.chrY.TPM[[\"10M\"]][Type==\"Salmon (SA mode)\"][,Trim:=\"No\"],\n        dt.trim.10M[,Trim:=\"Yes\"]\n        )\n  ## Number of false positives: chrY signal detected from females \n  dt.chrY.trim[,.(Trim,Sex,`Predicted Sex`)] %>% ftable\n\n  ##\n  ## Read counts by trim or not\n  dt.bar<-merge(\n    dl.chrY.TPM[[\"10M\"]][Type==\"Salmon (SA mode)\",.(SampleID,GA=gsub(\" weeks\",\"wk\",GA),Sex,Counts,TPM)], # no-trim\n    dt.trim.10M[Type==\"Salmon (SA mode)\",.(SampleID,GA,Sex,Counts,TPM)], # trim\n    by=c(\"SampleID\",\"Sex\",\"GA\")\n  )\n  cor.test(~Counts.x + Counts.y, dt.bar)\n  dt.bar[Counts.x>Counts.y] # no-trim > trim\n  dt.bar[Counts.x<Counts.y] # no-trim < trim\n  dt.bar[Sex==\"Female\" & Counts.x<Counts.y] # more counts for Trimmed Salmon\n\n  my.limit<-dt.bar[,max(Counts.x,Counts.y)]  %>% ceiling\n  p1.chrY.trim<-ggplot(dt.bar, aes(Counts.x+1,Counts.y+1)) + \n  geom_point(data=dt.bar, size=5, position=position_jitter(width=0.2,height=0.2),shape=21) +\n  scale_x_continuous(trans = scales::log2_trans(),\n                     breaks = scales::trans_breaks(\"log2\",function(x) 2^x),\n                     labels = scales::trans_format(\"log2\", math_format(2^.x)),\n                     limits=c(.5,my.limit*2)) +\n  scale_y_continuous(trans = scales::log2_trans(),\n                     breaks = scales::trans_breaks(\"log2\",function(x) 2^x),\n                     labels = scales::trans_format(\"log2\", math_format(2^.x)),\n                     limits=c(.5,my.limit*2)) +\n  #coord_fixed() + \n  facet_grid(Sex~GA,scales=\"free_x\") +\n  labs(x=\"Sum of read count (No trimmed reads)\", y=\"Sum of read count (trimmed reads)\") +\n  theme_Publication() + theme(panel.border = element_rect(colour = \"black\"))\n\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1D.v2.pdf\", width=11, height=7, title=\"Trim vs No trim\")\n  cowplot::plot_grid(p1.chrY.trim, labels=c(\"D\"),label_size=27)\n  dev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}