{
  "hash": "e95875091a57a4edca1e6069bf1a2e7d",
  "result": {
    "engine": "knitr",
    "markdown": "# Supplementary Text Figures {#sec-suppl-figure}\n\nThis chapter demonstrates the `R` codes that make supplementary text figures shown in the paper. \nMaking the main figures are shown in @sec-main-figure.\n\n## Supplementary Text Figure 1 {#sec-si-figure1}\n\n### Supplementary Text Figure 1A {#sec-si-figure1-a}\n![](static/figure/cfRNA.SI.FigA.png){#fig-si-fig1a}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  lazyLoad(\"downsample.chrY.TPM_cache/beamer/load_ds_salmon_4b8dd727729fd0ae5deb423d69e7c16d\") # dl.chrY.TPM and dl.stat\n\n  dt.ds.chrY <- lapply(names(dl.stat), function(DS) dl.stat[[DS]][,DS:=DS]) %>% rbindlist\n  dt.ds.chrY$DS<-factor(dt.ds.chrY$DS, level=c(\"1M\",\"5M\",\"10M\"))\n  dt.ds.chrY[,GA:=gsub(\" weeks\",\"wk\",GA)]\n  setnames(dt.ds.chrY, \"Type\", \"Method\")\n\n  p1.chrY<-ggplot(dt.ds.chrY, aes(Method,SumCount)) +\n  geom_rect(data = dt.ds.chrY[DS==\"5M\"],fill=\"grey60\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_bar(aes(fill=Method), stat=\"identity\",width=.5, alpha=.7) +\n  ggsci::scale_fill_jama() +\n  facet_grid(Sex~DS+GA,scales=\"free\") +\n  labs(y=\"Sum of read count on chrY genes\") +\n  theme_Publication() +\n  theme(legend.position=\"top\",\n        panel.border=element_rect(colour=\"black\"),\n        axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n  #\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1A.pdf\", width=11, height=8, title=\"Abundance of chrY\")\n  p1.chrY\n  dev.off()\n```\n:::\n\n\n### Supplementary Text Figure 1B {#sec-si-figure-1b}\n![](static/figure/cfRNA.SI.FigB.png){#fig-si-fig1b}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  lazyLoad(\"downsample.chrY.TPM_cache/beamer/load_ds_salmon_4b8dd727729fd0ae5deb423d69e7c16d\") # dl.chrY.TPM and dl.stat\n\n  lapply(dl.chrY.TPM, function(i) i[,.(sum(Counts),sum(TPM))])\n\n  dl.chrY.TPM<-lapply(dl.chrY.TPM, function(DT) {\n                  #DT[Sex==\"Male\",Class:=ifelse(TPM>0,\"TP\",\"FN\")]\n                  #DT[Sex==\"Female\",Class:=ifelse(TPM==0,\"TN\",\"FP\")] \n                  DT[,`Predicted Sex`:=ifelse(TPM>0, \"Male\",\"Female\"),Type]\n                  DT$Sex<-factor(DT$Sex, level=c(\"Male\",\"Female\"))\n                  DT$`Predicted Sex`<-factor(DT$`Predicted Sex`, level=c(\"Male\",\"Female\"))\n                  DT \n  }) \n\n  #####################################\n  # Predictive performance by DS & GA #\n  #####################################\n  dt.chrY.con.ga<-lapply(names(dl.chrY.TPM), function(DS){\n    lapply(split(dl.chrY.TPM[[DS]], dl.chrY.TPM[[DS]]$GA), function(DT){\n    my.GA<-DT[,.N,GA]$GA\n\n    cm1<-caret::confusionMatrix(DT[Type==\"HiSat2+Salmon\"][[\"Predicted Sex\"]], reference=DT[Type==\"HiSat2+Salmon\"][[\"Sex\"]])\n    cm2<-caret::confusionMatrix(DT[Type==\"Salmon (SA mode)\"][[\"Predicted Sex\"]], reference=DT[Type==\"Salmon (SA mode)\"][[\"Sex\"]])\n\n    rbind(\n    data.table(DS=DS, GA=my.GA,Type=\"HiSat2+Salmon\", Measure=names(cm1$byClass), Value=cm1$byClass),\n    data.table(DS=DS, GA=my.GA,Type=\"Salmon (SA mode)\", Measure=names(cm2$byClass), Value=cm2$byClass)\n    )[Measure %in% c(\"F1\",\"Precision\", \"Recall\")]\n    }) %>% rbindlist \n  }) %>% rbindlist \n\n  dt.chrY.con.ga$DS<-factor(dt.chrY.con.ga$DS, level=c(\"1M\",\"5M\",\"10M\"))\n  dt.chrY.con.ga[,GA:=gsub(\" weeks\",\"wk\",GA)]\n  setnames(dt.chrY.con.ga, \"Type\", \"Method\")\n\n  p1.chrY.con<-ggplot(dt.chrY.con.ga, aes(Method,Value)) +\n  geom_rect(data = dt.chrY.con.ga[DS==\"5M\"],fill=\"grey60\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_bar(aes(fill=Method), stat=\"identity\",width=.5, alpha=.7) +\n  ggsci::scale_fill_jama() +\n  facet_grid(Measure~DS+GA,scales=\"free\") +\n  labs(y=\"Score\") +\n  theme_Publication() +\n  theme(legend.position=\"none\",\n        panel.border=element_rect(colour=\"black\"),\n        axis.title.x=element_blank(),\n        axis.text.x=element_blank(),\n        axis.ticks.x=element_blank())\n\n\n  # merge SI.Fig1A + SI.Fig1B\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1AB.pdf\", width=11, height=14, title=\"Abundance of chrY\")\n  cowplot::plot_grid(p1.chrY, p1.chrY.con, labels=\"AUTO\", ncol=1, label_size=27, align=\"v\", axis=\"l\")\n  dev.off()\n```\n:::\n\n\n### Supplementary Text Figure 1C {#sec-si-figure-1c}\n![](static/figure/cfRNA.SI.FigC.png){#fig-si-fig1c}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  # load the transcript definition used in Salmon (SA)\n  load(\"RData/gr.ensg.Homo_sapiens.GRCh38.88.cdna.all.ncrna.fa.gz.RData\") %>% system.time # isa GRanges\n  gr.ensg[seqnames(gr.ensg)==\"Y\" & gr.ensg$gene_biotype==\"protein_coding\",] # chrY protein-coding; n=42 \n  this.gene<-(gr.ensg[seqnames(gr.ensg)==\"Y\" & gr.ensg$gene_biotype==\"protein_coding\",] %>% names) # chrY protein-coding; n=42 (without the training version e.g. ENSG00000176679)\n\n  # load the TPM based om 10M-ds dataset\n  load(\"RData/li.TPM.10M.RData\")\n  li.TPM[[\"Salmon_aln\"]][[\"TPM\"]] %>% dim # 62803 genes x 100 samples\n\n  ## Heatamp of TPM using `HiSat2+Salmon` (based on 10M)\n  li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev # count of 42 chrY genes\n  filter.g2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev >0 # filter for 42 chrY genes with TPM >0\n  this.gene2<-(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev)[filter.g2] %>% names # n=24 genes\n  this.sample2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev %>% names # n=100 samples sorted \n  filter.s2<-li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene2,] %>% colSums %>% sort %>% rev >0 # filter for samples with TPM >0 \n  predicted.male2<-(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s2] %>% names # n=60 samples \n\n  my.mat2<-log2(li.TPM[[\"Salmon_aln\"]][[\"counts\"]][this.gene2,this.sample2]+1)\n  rownames(my.mat2)<-gr.ensg[this.gene2]$gene_name\n\n  col.anno<-mat.samples[this.sample2,c(\"GA\",\"Sex\"),drop=F] # isa `data.frame`\n  col.anno$\"Predicted Sex\"<-ifelse(this.sample2 %in% predicted.male2,\"Male\",\"Female\")\n  col.anno<-col.anno[,c(\"Predicted Sex\",\"Sex\",\"GA\")]\n\n  GA.color<-ggsci::pal_jama(\"default\",alpha=.9)(4)\n  names(GA.color)<-c(\"12wk\",\"20wk\",\"28wk\",\"36wk\")\n  my.color=list(\n      `Sex`=c(Female=\"hotpink\",Male='skyblue'),\n      `Predicted Sex`=c(Female=\"hotpink3\",Male='skyblue3'),\n      #`GA`=c(\"12wk\"=cbPalette2[1],\"20wk\"=cbPalette2[2],\"28wk\"=cbPalette2[3],\"36wk\"=cbPalette2[4])\n      `GA`=GA.color\n  )\n\n  cph1<-ComplexHeatmap::pheatmap(my.mat2,\n                                 annotation_col=col.anno, \n                                 annotation_colors=my.color, \n                                 cluster_cols=F,\n                                 cluster_rows=F,\n                                 show_colnames=F,\n                                 border_color=NA,\n                                 fontsize=12,\n                                 name=\"log2(count)\",\n                                 row_title=\"\\nHiSat2+Salmon\",\n                                 row_title_gp = gpar(fontsize = 20),\n  )\n\n  filter.g3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev >0 # filter for 42 chrY genes with count >0\n  this.gene3<-(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% rowSums %>% sort %>% rev)[filter.g3] %>% names # n=16 genes (out of 42) >0 count \n  this.sample3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev %>% names # 100 sample names\n  filter.s3<-li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene3,] %>% colSums %>% sort %>% rev >0 # samples with count>0 \n  #(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s3] # n=38 samples with count>0 (predicted as Male)\n  predicted.male3<-(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% sort %>% rev)[filter.s3] %>% names # n=38 samples with count>0 (predicted as Male)\n\n  my.mat3<-log2(li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene3,this.sample3]+1)\n  rownames(my.mat3)<-gr.ensg[this.gene3]$gene_name\n\n  col.anno3<-mat.samples[this.sample3,c(\"GA\",\"Sex\"),drop=F]\n  col.anno3$\"Predicted Sex\"<-ifelse(this.sample3 %in% predicted.male3,\"Male\",\"Female\")\n  col.anno3<-col.anno3[,c(\"Predicted Sex\",\"Sex\",\"GA\")]\n\n  # via ComplexHeatmap\n  cph3<-ComplexHeatmap::pheatmap(my.mat3,\n                                 annotation_col=col.anno3, \n                                 annotation_colors=my.color, \n                                 cluster_cols=F,\n                                 cluster_rows=F,\n                                 show_colnames=F,\n                                 border_color=NA,\n                                 fontsize=12,\n                                 name=\"log2(count)\",\n                                 row_title=\"\\nSalmon (SA mode)\",\n                                 row_title_gp = gpar(fontsize = 20),\n                                 heatmap_legend_param = list(\n                                                            title_gp=gpar(fontsize=13,fontface=\"bold\"),\n                                                            labels_gp=gpar(fontsize=11),\n                            annotation_legend_param = list(title_gp=gpar(fontsize=13,fontface=\"bold\"),labels_gp = gpar(fontsize = 11))\n                                )\n  )\n\n\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1C.pdf\", width=11, height=14, title=\"Abundance of chrY\")\n  draw(cph1 %v% cph3, main_heatmap=\"log2(count)\", ht_gap=unit(.7,\"cm\"), auto_adjust=F)\n  grid.text(label=\"C\",gp=gpar(fontsize=27,fontface=\"bold\"),x=0.02,y=.99,just=\"top\")\n  dev.off()\n```\n:::\n\n\n### Supplementary Text Figure 1D {#sec-si-figure-1d}\n![](static/figure/cfRNA.SI.FigD.png){#fig-si-fig1d}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  dl.chrY.TPM %>% names\n\n  # load the TPM based om 10M-ds dataset\n  load(\"RData/li.TPM.10M.trim.RData\")\n  li.TPM[[\"Salmon\"]][[\"TPM\"]] %>% dim # 59354 genes x 100 samples\n\n  dt.trim.10M<-data.table(\n      `Type`=\"Salmon (SA mode)\",\n      `SampleID`=li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums %>% names,\n      `Counts`=li.TPM[[\"Salmon\"]][[\"counts\"]][this.gene,] %>% colSums, \n      `TPM`=li.TPM[[\"Salmon\"]][[\"TPM\"]][this.gene,] %>% colSums \n      )\n  # add Sex and GA\n  dt.trim.10M<-merge(dt.trim.10M, dt.samples[,.(SampleID,GA,Sex,pn_female)])\n\n  dt.trim.10M[,`Predicted Sex`:=ifelse(TPM>0, \"Male\",\"Female\"),Type]\n  dt.trim.10M$Sex<-factor(dt.trim.10M$Sex, level=c(\"Male\",\"Female\"))\n  dt.trim.10M$`Predicted Sex`<-factor(dt.trim.10M$`Predicted Sex`, level=c(\"Male\",\"Female\"))\n\n  dt.chrY.trim<-rbind(\n        dl.chrY.TPM[[\"10M\"]][Type==\"Salmon (SA mode)\"][,Trim:=\"No\"],\n        dt.trim.10M[,Trim:=\"Yes\"]\n        )\n  ## Number of false positives: chrY signal detected from females \n  dt.chrY.trim[,.(Trim,Sex,`Predicted Sex`)] %>% ftable\n\n  ##\n  ## Read counts by trim or not\n  dt.bar<-merge(\n    dl.chrY.TPM[[\"10M\"]][Type==\"Salmon (SA mode)\",.(SampleID,GA=gsub(\" weeks\",\"wk\",GA),Sex,Counts,TPM)], # no-trim\n    dt.trim.10M[Type==\"Salmon (SA mode)\",.(SampleID,GA,Sex,Counts,TPM)], # trim\n    by=c(\"SampleID\",\"Sex\",\"GA\")\n  )\n  cor.test(~Counts.x + Counts.y, dt.bar)\n  dt.bar[Counts.x>Counts.y] # no-trim > trim\n  dt.bar[Counts.x<Counts.y] # no-trim < trim\n  dt.bar[Sex==\"Female\" & Counts.x<Counts.y] # more counts for Trimmed Salmon\n\n  my.limit<-dt.bar[,max(Counts.x,Counts.y)]  %>% ceiling\n  p1.chrY.trim<-ggplot(dt.bar, aes(Counts.x+1,Counts.y+1)) + \n  geom_point(data=dt.bar, size=5, position=position_jitter(width=0.2,height=0.2),shape=21) +\n  scale_x_continuous(trans = scales::log2_trans(),\n                     breaks = scales::trans_breaks(\"log2\",function(x) 2^x),\n                     labels = scales::trans_format(\"log2\", math_format(2^.x)),\n                     limits=c(.5,my.limit*2)) +\n  scale_y_continuous(trans = scales::log2_trans(),\n                     breaks = scales::trans_breaks(\"log2\",function(x) 2^x),\n                     labels = scales::trans_format(\"log2\", math_format(2^.x)),\n                     limits=c(.5,my.limit*2)) +\n  #coord_fixed() + \n  facet_grid(Sex~GA,scales=\"free_x\") +\n  labs(x=\"Sum of read count (No trimmed reads)\", y=\"Sum of read count (trimmed reads)\") +\n  theme_Publication() + theme(panel.border = element_rect(colour = \"black\"))\n\n  pdf(file=\"Figures/Suppl/cfRNA.Suppl.Text.Fig1D.v2.pdf\", width=11, height=7, title=\"Trim vs No trim\")\n  cowplot::plot_grid(p1.chrY.trim, labels=c(\"D\"),label_size=27)\n  dev.off()\n```\n:::\n\n\n## Supplementary Text Figure 2 {#sec-si-figure2}\n![](static/figure/cfRNA.SI.Fig2.png){#fig-si-fig2}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"RData/dl.enet.result.core17.RData\") # Validation of ENet models from 28wk, discovery dataset (preterm)\nload(\"RData/dl.combined.result.core17.RData\") # Validation of ENet models from the combined model (preterm+term)\n\n##\n## AUC in All \n##\nga<-paste0(c(12,20,28,36), \"wk\")\nterm<-c(\"(preterm)\",\"(term)\")\nmy.dataset<-data.table(expand.grid(ga,term))[,Var3:=paste0(Var1,Var2)][Var3!=\"36wk(preterm)\"]$Var3\nmy.dataset<-c(\"Munchel\",my.dataset)\n\ndt.auc.long<-\nlapply(my.dataset, function(this.dataset){\n  rbind(\n        (lapply(2:10, function(my.num) dl.combined.result[[my.num-1]][fold==this.dataset,.(Num=my.num,Predictor=predictor,AUC_test=AUC_test/100,AUC_test_lo=AUC_test_lo/100,AUC_test_hi=AUC_test_hi/100)]) %>% rbindlist)[,Model:=\"preterm+term (28wk)\"]\n        ,\n        (lapply(2:10, function(my.num) dl.enet.result[[my.num-1]][fold==this.dataset & grepl(\"ENet\",methods),.(Num=my.num,Predictor=predictor,AUC_test=AUC_test/100,AUC_test_lo=AUC_test_lo/100,AUC_test_hi=AUC_test_hi/100)]) %>% rbindlist)[,Model:=\"preterm (28wk)\"]\n        \n  )[,Dataset:=this.dataset] \n}) %>% rbindlist %>% setcolorder(c(\"Dataset\",\"Model\"))\n\ndt.auc.long[Dataset!=\"Munchel\",GA:=substr(Dataset,1,4)]\ndt.auc.long[Dataset!=\"Munchel\",Source:=substr(Dataset,6,nchar(Dataset)-1)][,Source:=ifelse(Source==\"preterm\",\"Discovery (preterm)\",\"Validation (term)\")]\ndt.auc.long[Dataset==\"Munchel\",`:=`(Source=\"Munchel\",GA=\"36wk\")]\ndt.auc.long$Model<-factor(dt.auc.long$Model, level=c(\"preterm (28wk)\",\"preterm+term (28wk)\"))\ndt.auc.long$Source<-factor(dt.auc.long$Source, level=c(\"Discovery (preterm)\",\"Validation (term)\",\"Munchel\"))\n\np.auc.combined.A<-ggplot(dt.auc.long[Source!=\"Munchel\"], aes(Num, AUC_test,group=Model)) + \n  geom_rect(data = dt.auc.long[Source!=\"Munchel\" & GA==\"28wk\"],aes(fill = GA),fill=\"grey90\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_pointrange(aes(col=Model,ymin=AUC_test_lo, ymax=AUC_test_hi),\n                  position=position_dodge(width=0.4),\n                  size=.8,alpha=.8) +\n  scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n  scale_x_continuous(breaks=2:10) +\n  labs(y=\"AUC\", x=\"Number of predictor mRNA in the training model\") +\n  scale_color_manual(values=c(\"grey30\",cbPalette2[2])) +\n  facet_grid(Source~GA) + \n  theme_Publication() +\n  theme(legend.position=\"\", panel.border = element_rect(colour = \"black\"))\n\np.auc.combined.B<-ggplot(dt.auc.long[Source==\"Munchel\"], aes(Num, AUC_test,group=Model)) + \n  geom_pointrange(aes(col=Model,ymin=AUC_test_lo, ymax=AUC_test_hi),\n                  position=position_dodge(width=0.4),\n                  size=.8,alpha=.8) +\n  scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n  scale_x_continuous(breaks=2:10) +\n  labs(y=\"AUC\", x=\"Number of predictor mRNA in the training model                                     \") +\n  scale_color_manual(values=c(\"grey30\",cbPalette2[2])) +\n  facet_grid(Source~.) + \n  theme_Publication() +\n  theme(legend.position=\"left\", \n        panel.border = element_rect(colour = \"black\"),\n        plot.margin=margin(1,-15,7,0)\n  )\n\np.auc.bottom<-cowplot::plot_grid(NULL,p.auc.combined.B, nrow=1,labels=c(\"\",\"B\"),label_size=27,rel_widths=c(.87,1))\n\npdf(file=\"Figures/Suppl/cfRNA.Suppl.Data.Fig.combined.AUC.AB.pdf\", width=12, height=10, title=\"Suppl Fig: AUC from the combined model vs preterm model\")\ncowplot::plot_grid(p.auc.combined.A, p.auc.bottom,ncol=1, labels=c(\"A\",\"\"),label_size=27,rel_heights=c(2,1), align=\"v\", axis=\"lr\")\ndev.off()\n```\n:::\n\n\n## Supplementary Text Figure 3 {#sec-si-figure3}\n![](static/figure/cfRNA.SI.Fig3.png){#fig-si-fig3}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nload(\"RData/dt.cpmZ.preterm.POPS-2022.GRCh38.88.RData\") # dt.cpmZ (preterm)\nload(\"RData/dt.cpmZ.term.POPS-2022.GRCh38.88.RData\") # dt.cpmZ.term (term)\nload(\"RData/dt.cpmZ.munchel.RData\") # dt.cpmZ.munchel (Munchel)\n\ndt.lep.pappa2<-rbind(\n                      (dt.cpmZ[geneName %in% c(\"LEP\",\"PAPPA2\")] %>% dcast.data.table(SampleID+GA+Condition~geneName, value.var=\"logCPMZ\"))[,Source:=\"Discovery\"],\n                      (dt.cpmZ.term[geneName %in% c(\"LEP\",\"PAPPA2\")] %>% dcast.data.table(SampleID+GA+Condition~geneName, value.var=\"logCPMZ\"))[,Source:=\"Validation\"],\n                      (dt.cpmZ.munchel[geneName %in% c(\"LEP\",\"PAPPA2\")] %>% dcast.data.table(SampleID+Condition~geneName, value.var=\"logCPMZ\"))[,Source:=\"Munchel\"]\n    ,fill=T)\n\ndt.lep.pappa2[,Dataset:=ifelse(is.na(GA),Source,paste0(Source,\"(\",GA,\")\"))]\ndt.lep.pappa2[,.(Cor=cor(LEP,PAPPA2),Pval=cor.test(LEP,PAPPA2)$p.value),.(Source,GA)][order(Source,GA)] \ndt.lep.pappa2[Condition==\"Case\",.(Cor=cor(LEP,PAPPA2),Pval=cor.test(LEP,PAPPA2)$p.value),.(Source,GA)][order(Source,GA)] \n\np1<-\nggplot(dt.lep.pappa2[Source!=\"Munchel\"], aes(LEP,PAPPA2)) +\n  geom_rect(data = dt.lep.pappa2[Source==\"Discovery\" & GA==\"28wk\"],aes(fill = GA),fill=\"grey80\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n  geom_point(aes(col=Condition),size=3,shape=21,stroke=1.1,alpha=.8) +\n  facet_grid(Source~GA) + \n  ggsci::scale_color_jama() +\n  labs(x=\"Z-score (LEP)\",y=\"Z-score (PAPPA2)\") +\n  theme_Publication() +theme (panel.border = element_rect(colour = \"black\"),legend.position=\"top\")\n\np2<-\nggplot(dt.lep.pappa2[Source==\"Munchel\"], aes(LEP,PAPPA2)) +\n  geom_point(aes(col=Condition),size=3,shape=21,stroke=1.1,alpha=.8) +\n  facet_grid(Source~.) + \n  ggsci::scale_color_jama() +\n  labs(x=\"\",y=\"\") +\n  theme_Publication() +theme (panel.border = element_rect(colour = \"black\"),legend.position=\"\")\n\np2.right<-cowplot::plot_grid(NULL,p2,labels=c(\"\",\"B\"),ncol=1,label_size=27,rel_heights=c(1,1))\np.corr2<-cowplot::plot_grid(p1, p2.right, labels=c(\"A\",\"\"),label_size=27,rel_widths=c(2.8,1))\n\ncairo_pdf(file=\"Figures/Suppl/cfRNA.Suppl.LEP.PAPPA2.cor2.pdf\", width=12,height=6, onefile=T)\np.corr2\ndev.off()\n```\n:::\n\n\n## Supplementary Text Figure 4, 5, and 6 {#sec-si-figure4-6}\n![](static/figure/cfRNA.SI.Fig4.5.6.pdf#zoom=50&&navpanes=0&statusbar=0&messages=0&pagemode=none){width=100% height=475px}\n[Full Screen](static/figure/cfRNA.SI.Fig4.5.6.pdf)\n\nYou may need to refer to @sec-ga-long and @sec-fig5b\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntargets<-c(\n  dt.R2.GA2[order(-r2m)][[\"gene\"]][1:100], # top 100 by r2\n  dt.R2.GA2[order(p.combined)][[\"gene\"]][1:100], # top 100 by the combined p-value\n  dt.R2.GA[BH.GA<0.05][order(p.GA)][coef.GA<0][[\"gene\"]][1:100] # top 100 decreasing\n  ) %>% unique\n#\nli.plots<-lapply(dl.logCPM[targets], function(dt.foo){\n    my.gene<-unique(dt.foo[[\"geneName\"]])\n    message(my.gene)\n\n    r2m<-li.lmer[[my.gene]][[\"stat\"]][Model==\"GA2\"][[\"r2m\"]] %>% round(3)\n    r2c<-li.lmer[[my.gene]][[\"stat\"]][Model==\"GA2\"][[\"r2c\"]] %>% round(3)\n    #my.title=paste0(my.gene,\" (r2m:\",r2m,\", r2c:\",r2c,\")\")\n    my.title=paste0(my.gene,\" (r2m:\",r2m,\")\")\n\n    my.title.y<-latex2exp::TeX(r\"($\\textbf{log_2 CPM}$)\")\n\n    ggplot(dt.foo, aes(x = GAwk, y = logCPM)) +\n    geom_line(aes(group = POPSID), linewidth = .5, col=\"grey80\",alpha=.7) +\n    geom_point(aes(color = as.factor(GA)), size=2, alpha=.7) +\n    labs(subtitle=my.title, x = \"Gestational Age (weeks)\", y=my.title.y, color = \"GA (week)\") +\n    geom_ribbon(data=li.lmer[[my.gene]][[\"predict\"]], aes(ymin=conf.low, ymax=conf.high), alpha=0.6, fill = \"grey40\") +\n    geom_line(data=li.lmer[[my.gene]][[\"predict\"]], linewidth=1.5, col=\"blue\",alpha=0.8) + \n    scale_x_continuous(breaks=c(12,20,28,36)) +\n    scale_color_manual(values=cbPalette2) +\n    theme_Publication() +\n    theme(legend.position=\"none\")\n})\n\n# Top 100 by R2M\nfile.name1<-file.path('Figures/Suppl',paste0('cfRNA.Suppl.Data.Fig.logCPM_by_GA_lmer.pdf'))\ncairo_pdf(filename=file.name1, width=14, height=9, onefile=T)\ngrid.text(label=paste0(\"Supplementary Figure 4.\\nTop 100 cfRNAs\\nby the coefficient of determination\"),gp=gpar(fontsize=50,fontface=\"bold\"),x=.5,y=.6,just=\"center\")\ngridExtra::marrangeGrob(li.plots[dt.R2.GA2[order(-r2m)][[\"gene\"]][1:100]],nrow=2,ncol=4,top=NULL)\n\n# Top 100 by p.combined\ngrid.newpage()\ngrid.text(label=paste0(\"Supplementary Figure 5.\\nTop 100 cfRNAs\\nby the combined p-values\"),gp=gpar(fontsize=50,fontface=\"bold\"),x=.5,y=.6,just=\"center\")\ngridExtra::marrangeGrob(li.plots[dt.R2.GA2[order(p.combined)][[\"gene\"]][1:100]],nrow=2,ncol=4,top=NULL)\n\n# Top 100 by negative coefficient in linear mixed effect model (GA only)\ngrid.newpage()\ngrid.text(label=paste0(\"Supplementary Figure 6.\\nTop 100 cfRNAs\\nsignificantly decreasing\\n(negative coefficient)\\nby gestational age\"),gp=gpar(fontsize=50,fontface=\"bold\"),x=.5,y=.6,just=\"center\")\ngridExtra::marrangeGrob(li.plots[dt.R2.GA[BH.GA<0.05][order(p.GA)][coef.GA<0][[\"gene\"]][1:100]],nrow=2,ncol=4,top=NULL)\ndev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}