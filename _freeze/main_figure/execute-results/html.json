{
  "hash": "64ef2e3c230cca7d431a67e0b9f9cc46",
  "result": {
    "engine": "knitr",
    "markdown": "# Main Figures {#sec-main-figure}\n\nThis chapter demonstrates the `R` and the `dot` codes that make the main figures shown in the paper.\nMaking the supplementary text figures are shown in @sec-suppl-figure.\n\n## Figure 1 {#sec-fig1}\n![Figure 1 in the paper](static/figure/cfRNA.Fig1.png){#fig-fig1}\n\nThis figure was made using the [Biorender](http://www.biorender.com), except some inlet figures (shown further below, e.g. [@sec-fig2; @sec-fig3; @sec-fig4; @sec-fig5]) made by `R`, and workflow diagrams (e.g. [@fig-gv-quant; @fig-gv-discovery; @fig-gv-validation; @fig-gv-munchel]) written in [DOT (Graphic Description Language)](https://en.wikipedia.org/wiki/DOT_(graph_description_language)) such as [Graphviz](https://graphviz.org/), where you can see some example codes shown below.\n\n### The `dot` code in `Figure 1A` {#sec-fig1a}\n```{.dot filename=\"static/dot/cfRNA_quant_workflow2.quant.gv\"}\ndigraph G {\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  placenta_rna[\n    label = \"POPS\\nplacenta RNA-Seq\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  plasma_rna [\n    label = \"POPS\\nplasma RNA-Seq\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  pops[\n    label = \"POPS placenta\\ntranscriptome\";\n    shape = rect;\n    color = black;\n    fontcolor = black;\n  ];\n\n  quant_pops [\n    label = \"Quantification\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  placenta_rna-> pops[label=\"StringTie\"];\n  pops-> quant_pops[label=\"Salmon (index)\"];\n  plasma_rna -> quant_pops[label=\"Salmon (SA-mode)\"]\n\n  {rank=same; placenta_rna plasma_rna} \n}\n\n```\n\n\n```{dot}\n//| label: fig-gv-quant\n//| fig-cap: \"A diagram of cfRNA quantification\"\n//| file: static/dot/cfRNA_quant_workflow2.quant.gv\ndigraph G {\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  placenta_rna[\n    label = \"POPS\\nplacenta RNA-Seq\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  plasma_rna [\n    label = \"POPS\\nplasma RNA-Seq\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  pops[\n    label = \"POPS placenta\\ntranscriptome\";\n    shape = rect;\n    color = black;\n    fontcolor = black;\n  ];\n\n  quant_pops [\n    label = \"Quantification\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  placenta_rna-> pops[label=\"StringTie\"];\n  pops-> quant_pops[label=\"Salmon (index)\"];\n  plasma_rna -> quant_pops[label=\"Salmon (SA-mode)\"]\n\n  {rank=same; placenta_rna plasma_rna} \n}\n```\n\n\n### The `dot` code in `Figure 1B` {#sec-fig1b}\n```{.dot filename=\"static/dot/cfRNA_quant_workflow2.discovery.gv\"}\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_pops [\n    label = \"Quantification\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  deg_pops [\n    label = \"DEG\";\n    shape = rect;\n  ];\n\n  core_deg[\n    label = \"Core DEG\";\n    shape = rect;\n  ];\n\n  best_model [\n    label = \"Best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  check_top1[\n    label = \"Top1% DEG\\nby all methods\";\n    shape = diamond;\n  ];\n\n  quant_pops-> deg_pops[label=\"DESeq2\"];\n  quant_pops-> deg_pops[label=\"edgeR\"];\n  quant_pops-> deg_pops[label=\"Logistic\\nRegression\"];\n\n  deg_pops-> check_top1;\n  check_top1-> core_deg;\n  core_deg-> best_model [label=\"5-fold CV\\n11 ML methods\"];\n\n/*\n  {rank=same; check_top1  core_deg} \n  {rank=same; best_model deg_pops} \n*/\n}\n\n```\n\n\n```{dot}\n//| label: fig-gv-discovery\n//| fig-cap: \"A diagram of finding the best predictive model in the discovery cohort \"\n//| file: static/dot/cfRNA_quant_workflow2.discovery.gv\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_pops [\n    label = \"Quantification\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  deg_pops [\n    label = \"DEG\";\n    shape = rect;\n  ];\n\n  core_deg[\n    label = \"Core DEG\";\n    shape = rect;\n  ];\n\n  best_model [\n    label = \"Best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  check_top1[\n    label = \"Top1% DEG\\nby all methods\";\n    shape = diamond;\n  ];\n\n  quant_pops-> deg_pops[label=\"DESeq2\"];\n  quant_pops-> deg_pops[label=\"edgeR\"];\n  quant_pops-> deg_pops[label=\"Logistic\\nRegression\"];\n\n  deg_pops-> check_top1;\n  check_top1-> core_deg;\n  core_deg-> best_model [label=\"5-fold CV\\n11 ML methods\"];\n\n/*\n  {rank=same; check_top1  core_deg} \n  {rank=same; best_model deg_pops} \n*/\n}\n```\n\n\n### The `dot` code in `Figure 1C` {#sec-fig1c}\n```{.dot filename=\"static/dot/cfRNA_quant_workflow2.validation.gv\"}\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_pops [\n    label = \"Quantification\\n(Validation)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  best_model [\n    label = \"Best model\\n(Discovery)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  predict [\n    label = \"Predict the outcome\\nof validation dataset\";\n    shape = rect;\n  ];\n\n  score [\n    label = \"Predictive performance\\nof best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  quant_pops -> predict [label=\"by each gestation\"];\n  best_model -> predict;\n  predict -> score;\n\n/*  {rank=same; predict best_model} */\n}\n\n```\n\n\n```{dot}\n//| label: fig-gv-validation\n//| fig-cap: \"A diagram showing the validation of best predictive model in the validation cohort \"\n//| file: static/dot/cfRNA_quant_workflow2.validation.gv\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_pops [\n    label = \"Quantification\\n(Validation)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  best_model [\n    label = \"Best model\\n(Discovery)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  predict [\n    label = \"Predict the outcome\\nof validation dataset\";\n    shape = rect;\n  ];\n\n  score [\n    label = \"Predictive performance\\nof best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  quant_pops -> predict [label=\"by each gestation\"];\n  best_model -> predict;\n  predict -> score;\n\n/*  {rank=same; predict best_model} */\n}\n```\n\n\n### The `dot` code in `Figure 1D` {#sec-fig1d}\n```{.dot filename=\"static/dot/cfRNA_quant_workflow2.munchel.gv\"}\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_munchel [\n    label = \"Quantification\\n(Munchel)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  best_model [\n    label = \"Best model\\n(Discovery)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  predict [\n    label = \"Predict the outcome\\nof Munchel dataset\";\n    shape = rect;\n  ];\n\n  score [\n    label = \"Predictive performance\\nof best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  quant_munchel -> predict \n  best_model -> predict;\n  predict -> score;\n\n/*  {rank=same; predict best_model} */\n}\n\n```\n\n::: {#fig-gv-munchel}\n\n```{dot}\n//| fig-cap: \"A diagram showing the validation of best predictive model using the external data\"\n//| file: static/dot/cfRNA_quant_workflow2.munchel.gv\ndigraph G {\n  /*rankdir=LR; */\n  node [fontname = \"Handlee\", color=black, fontcolor=black];\n  edge [fontname = \"Handlee\", color=black, fontcolor=black];\n\n  quant_munchel [\n    label = \"Quantification\\n(Munchel)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  best_model [\n    label = \"Best model\\n(Discovery)\";\n    shape = rect;\n    style = filled;\n    fontcolor = white;\n  ];\n\n  predict [\n    label = \"Predict the outcome\\nof Munchel dataset\";\n    shape = rect;\n  ];\n\n  score [\n    label = \"Predictive performance\\nof best model\";\n    style = \"rounded,filled\";\n    fillcolor = \"darkgoldenrod2\"\n    shape = rect;\n    color = black;\n  ];\n\n  quant_munchel -> predict \n  best_model -> predict;\n  predict -> score;\n\n/*  {rank=same; predict best_model} */\n}\n```\n\n:::\n\n## Figure 2 {#sec-fig2}\n![Figure 2 in the paper](static/figure/cfRNA.Fig2.png){#fig-fig2}\n\n### Figure 2A {#sec-fig2a}\n\n::: {.cell}\n\n```{.r .cell-code  code-summary=\"`R` code to generate a histogram of p-values using `ggplot`\"}\n# cfRNA.preterm.PE.modelling.logitZ.POPS-2022.GRCh38.88.Rmd\n# fig2B. histogram of p-values from univariable logistic regression using the 28wk discovery\n  load(\"RData/dl.logregZ.preterm.POPS-2022.GRCh38.88.RData\")\n\n  sapply(dl.logregZ, function(DT) DT[padj.BH<0.05] %>% nrow)\n\n  #ks.test(dl.logregZ[[\"28wk\"]]$pval,\"punif\",0,1) #,exact=T)\n\n  p2.hist<-ggplot(dl.logregZ[[\"28wk\"]],aes(pval)) +\n         geom_histogram(aes(y=..density..),alpha=.8,bins=40) +\n         #geom_density(alpha=.5) +\n         xlab(\"P-value\") + ylab(\"Density\") +\n         annotate(\"text\",x=0.48,y=10,label=\"P-value < 2.2e-16\",size=6) +\n         theme_Publication()\n  print(p2.hist)\n```\n:::\n\n\n### Figure 2B {#sec-fig2b}\n\n::: {.cell}\n\n```{.r .cell-code}\n  load(\"RData/dl.res.edgeR.preterm.POPS-2022.GRCh38.88.RData\") # edgeR result\n  dl.res.edgeR[[\"28wk\"]]\n\n## cfRNA.preterm.PE.modelling.DEG.POPS-2022.GRCh38.88.Rmd\n## fig1A. Volcano (28wk) - edgeR (using original p-values)\n  res.edger<-dl.res.edgeR[[\"28wk\"]]\n\n  (dt.label<-\n  rbind(\n  res.edger[order(BH)][BH<0.05,.SD[c(1:6)]],\n  res.edger[order(-abs(logFC))][,.SD[c(1:2)]]\n  ) %>% unique)\n\n  p2.vol<-ggplot(res.edger, aes(logFC, -log10(PValue))) + \n        geom_point(data=res.edger[BH>0.05],size=2, col=\"grey90\", alpha=.6) +\n        geom_point(data=res.edger[BH<=0.05], size=2,col=\"grey20\",alpha=.8) +\n        ylab(\"-log10(P-value)\") + xlab(\"log2(Fold change)\") +\n        ggrepel::geom_text_repel(\n                                data=res.edger[order(BH)][BH<0.05,.SD[c(1:6)]] # dt.label\n                                ,aes(label=gene_id),\n                                box.padding = 0.6, max.overlaps = Inf,\n                                #direction='gy',\n                                #nudge_y=1,\n                                size=5) +\n        theme_Publication()\n  print(p2.vol)\n```\n:::\n\n\n### Figure 2C {#sec-fig2c}\n\n::: {.cell}\n\n```{.r .cell-code}\n# cfRNA.preterm.PE.modelling.logitZ.POPS-2022.GRCh38.88.Rmd\n  load(\"RData/dl.resLFC.preterm.POPS-2022.GRCh38.88.RData\")\n\n  venn.top1pctZ<-list(\n                   `edgeR`=dl.res.edgeR[[\"28wk\"]][order(PValue)][1:151]$gene_id,\n                   `DESeq2`=dl.resLFC[[\"28wk\"]][order(pvalue)][1:151]$gene_id,\n                  `AUC`=dl.logregZ[[\"28wk\"]][order(-auc)][1:151]$gene_id,\n                  `AIC`=dl.logregZ[[\"28wk\"]][order(AIC)][1:151]$gene_id\n                  )\n  p2.venn<-ggvenn::ggvenn(venn.top1pctZ,fill_color=rep(\"grey100\",length(venn.top1pctZ)),set_name_size=5.6,text_size=6,stroke_size=.7,show_percentage=FALSE)\n  print(p2.venn)\n\n  dt.venn.top1pctZ<-lapply(names(venn.top1pctZ), function(i) data.table(i,venn.top1pctZ[[i]])) %>% rbindlist %>% dcast.data.table(V2~i, fun=length)\n  setnames(dt.venn.top1pctZ,\"V2\",\"Gene\")\n  top1pct.genesZ<-dt.venn.top1pctZ[AIC==1 & AUC==1 & DESeq2==1 & edgeR==1]$Gene\n```\n:::\n\n\n### Figure 2D {#sec-fig2d}\n\n::: {.cell}\n\n```{.r .cell-code}\n## Heatmap of the 17 core genes\n# cfRNA.preterm.PE.modelling.WF2.POPS-2022.GRCh38.88.Rmd \n  load(\"RData/dt.cpmZ.preterm.POPS-2022.GRCh38.88.RData\")\n\n  #top1pct.genesZ # the 17 core DEGs\n  this.mat<-dt.cpmZ[GA==\"28wk\" & geneName %in% top1pct.genesZ,.(SampleID,geneName,logCPMZ,y=ifelse(Condition==\"Case\",1,0))] %>% dcast.data.table(SampleID+y~geneName,value.var=\"logCPMZ\") %>% as.matrix(rownames=\"SampleID\") # %>% as.data.frame\n  #pheatmap::pheatmap(t(this.mat[,top1pct.genesZ]))\n\n  p.anno<-HeatmapAnnotation(outcome=ifelse(this.mat[,\"y\"]==1,\"case\",\"control\"),\n                            which=\"column\", \n                            col=list(outcome=c(`case`=\"grey10\",`control`=\"grey90\"))\n                        )\n  p.main<-ComplexHeatmap::Heatmap(t(this.mat[,top1pct.genesZ]),\n                        name='z-score',\n                        row_names_gp=gpar(fontsize=10),\n                        show_column_names =F,\n                        #col=circlize::colorRamp2(c(min(this.mat,na.rm=T), 0, max(this.mat,na.rm=T)), c(\"blue\", \"white\", \"red\")),\n                        top_annotation=p.anno\n                        )\n  p2.heat = grid.grabExpr(ComplexHeatmap::draw(p.main,merge_legend=T))\n  print(p2.heat)\n```\n:::\n\n\n### Figure 2A-D\n\n::: {.cell}\n\n```{.r .cell-code}\n## p2.vol\n## p2.hist\n## p2.venn\n## p2.heatmap\n  pdf(file=\"Figures/cfRNA.Fig2.pdf\", width=11, height=9,title=\"Fig2: the 17 core genes\")\n  cowplot::plot_grid(p2.hist, p2.vol, p2.venn, p2.heat, nrow=2,labels=\"AUTO\",label_size=27,align=\"hv\",axis='l')\n  dev.off()\n```\n:::\n\n\n## Figure 3 {#sec-fig3}\n![Figure 3 in the paper](static/figure/cfRNA.Fig3.png){#fig-fig3}\n\n### Figure 3A {#sec-fig3a}\n\n::: {.cell}\n\n```{.r .cell-code}\n  load(\"RData/dl.kcv.result.core17.RData\")\n  #########################################################\n  # Reulst of 11 ML methods based on 5-fold CV with 5 rep #\n  #########################################################\n  (dt.foo<-lapply(dl.kcv.result, function(DT) DT[,.(.N, \n      mean_AUC_test=mean(AUC_test), mean_AUC_test_lo=mean(AUC_test_lo), mean_AUC_test_hi=mean(AUC_test_hi)\n      ),method][,Rank:=frank(-mean_AUC_test)][order(Rank)]\n  ) %>% rbindlist )\n  (dt.bar<-dt.foo[,.(.N,N_test=sum(N),rankSum=sum(Rank),meanRank=sum(Rank)/5, #F2-F6\n            meanAUC=mean(mean_AUC_test)/100,\n            meanAUC_lo=mean(mean_AUC_test_lo)/100,\n            meanAUC_hi=mean(mean_AUC_test_hi)/100)\n  ,method][order(rankSum)])\n\n  dt.bar[,.(`Method`=method,`Rank Sum`=rankSum,`Mean Rank`=meanRank,`Mean AUC`=meanAUC,`AUC Range`=\"\")] %>%\n  kbl(booktabs=F, digits=4) %>%\n  kable_styling(latex_options = c(\"basic\"),full_width=F,font_size=10) %>%\n  #kable_styling(bootstrap_options = c(\"condensed\"), full_width = F, font_size=10) %>%\n  column_spec(5, image = spec_pointrange(\n    x = dt.bar$meanAUC,\n    xmin = dt.bar$meanAUC_lo,\n    xmax = dt.bar$meanAUC_hi,\n    cex= 0.6,\n    vline = .80,\n    height=50)\n  ) %>% save_kable(\"Figures/cfRNA.Fig2.KCV.table.pdf\")\n\n  ##\n  ##\n  (dt.foo<-lapply(names(dl.kcv.result), function(NF) \n      dl.kcv.result[[NF]][,.(NF=substr(NF,2,3),.N, \n      mean_AUC=mean(AUC_test)/100, mean_AUC_lo=mean(AUC_test_lo)/100, mean_AUC_hi=mean(AUC_test_hi)/100\n      ),method][,Rank:=frank(-mean_AUC)][order(Rank)]\n  ) %>% rbindlist )\n  dt.bar[,.(Method=method,`Rank sum`=rankSum, `Mean rank`=meanRank,round(meanAUC,3),round(meanAUC_lo,3),round(meanAUC_hi,3))][,.(Method,paste(V4,\"(\",V5,\"-\",V6,\")\"))]\n  (dt.baz<-dt.bar[,.(Method=method,`Rank sum`=rankSum, `Mean rank`=meanRank,`Mean AUC (95% CI)`=paste0(sprintf(\"%.3f\",meanAUC),\" (\",round(meanAUC_lo,3),\" - \",round(meanAUC_hi,3),\")\"))])\n\n  library(ggpmisc)\n\n  p.kcv<-ggplot(dt.foo, aes(method, mean_AUC)) +\n    geom_pointrange(aes(col=NF, ymin=mean_AUC_lo, ymax=mean_AUC_hi),position=position_dodge(width=0.7), size=.9,alpha=.8) +\n    scale_x_discrete(limits=dt.bar$method) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ggsci::scale_color_jco(name=\"Number of mRNA in the training model\") +\n    labs(x=\"ML Method\",y=\"The mean AUC \\nacross 5-fold CV with 5 repetitions\") +\n    geom_table(data=data.table(x=\"LASSO\", y=0.03, tb=list(dt.baz)),aes(x=x,y=y, label=tb), size=5, table.theme = ttheme_gtlight ) +\n    theme_Publication() +\n    theme(legend.position=\"top\", \n        legend.key = element_rect(fill = \"transparent\"),\n        legend.background = element_rect(fill='transparent', linetype=\"solid\",color=\"black\",size=.2),\n        legend.box.background = element_rect(fill='transparent'),\n        axis.text.x = element_text(angle = 45, hjust=1, size=rel(1)))\n```\n:::\n\n\n### Figure 3B {#sec-fig3b}\n\n::: {.cell}\n\n```{.r .cell-code}\n  load(\"RData/dl.final.result.core17.RData\")\n  load(\"RData/dl.enet.result.core17.RData\")\n  load(\"RData/dt.best.result.core17.RData\") # dt.best.result\n library(ggbreak) \n\n  ###############################################\n  # The final training models from LASSO & ENet #\n  ###############################################\n  (dt.enet.tr<-lapply(names(dl.final.result), function(FN){\n    dl.final.result[[FN]][grepl(\"ENet\",methods) & fold==\"28wk(preterm)\",.(Method=\"ENet\",FN=FN,predictor,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100,LPOCV=LPOCV_test/100,LPOCV_lo=LPOCV_test_lo/100,LPOCV_hi=LPOCV_test_hi/100)]\n  }) %>% rbindlist)\n  (dt.lasso.tr<-lapply(names(dl.final.result), function(FN){\n    dl.final.result[[FN]][grepl(\"LASSO\",methods) & fold==\"28wk(preterm)\",.(Method=\"LASSO\",FN=FN,predictor,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100,LPOCV=LPOCV_test/100,LPOCV_lo=LPOCV_test_lo/100,LPOCV_hi=LPOCV_test_hi/100)]\n  }) %>% rbindlist)\n  dt.final.tr<-rbind(dt.enet.tr, dt.lasso.tr)\n\n  dt.final.tr[,.(Method,`Selected features`=predictor,AUC,`AUC Range`=\"\",LPOCV,`LPOCV Range`=\"\")]\n\n  ##################################\n  ## Train for ENet and LASSO only #\n  ##################################\n  lapply(names(dl.enet.result), function(FN)\n    dl.enet.result[[FN]][grepl(\"ENet\",methods) & fold==\"28wk(preterm)\",-c(\"fold\")][,`:=`(Method=\"ENet\",`N`=substr(FN,2,nchar(FN)) %>% as.integer)]\n  ) %>% rbindlist\n\n  lapply(names(dl.enet.result), function(FN)\n    dl.enet.result[[FN]][grepl(\"LASSO\",methods) & fold==\"28wk(preterm)\",-c(\"fold\")][,`:=`(Method=\"LASSO\",`N`=substr(FN,2,nchar(FN)) %>% as.integer)]\n  ) %>% rbindlist\n\n  dt.enet.lasso.tr<-lapply(names(dl.enet.result), function(FN){\n    dt.foo<-dl.enet.result[[FN]][grepl(\"ENet\",methods) & fold==\"28wk(preterm)\",-c(\"fold\")][,`:=`(Method=\"ENet\",`N`=substr(FN,2,nchar(FN)) %>% as.integer)]\n    dt.bar<-dl.enet.result[[FN]][grepl(\"LASSO\",methods) & fold==\"28wk(preterm)\",-c(\"fold\")][,`:=`(Method=\"LASSO\",`N`=substr(FN,2,nchar(FN))%>% as.integer)]\n\n    rbind(\n    dt.foo[,.(Method,N,predictor,Measure=\"AUC\",Score=AUC_test/100,Lo=AUC_test_lo/100,Hi=AUC_test_hi/100)],\n    dt.foo[,.(Method,N,predictor,Measure=\"LPOCV-AUC\",Score=LPOCV_test/100,Lo=LPOCV_test/100,Hi=LPOCV_test/100)],\n    #dt.foo[,.(Method,N,predictor,Measure=\"LPOCV-AUC\",Score=LPOCV_test/100,Lo=LPOCV_test_lo/100,Hi=LPOCV_test_hi/100)],\n    dt.foo[,.(Method,N,predictor,Measure=\"BIC\",Score=BIC,Lo=BIC,Hi=BIC)],\n    dt.foo[,.(Method,N,predictor,Measure=\"AIC\",Score=AIC,Lo=AIC,Hi=AIC)],\n    dt.bar[,.(Method,N,predictor,Measure=\"AUC\",Score=AUC_test/100,Lo=AUC_test_lo/100,Hi=AUC_test_hi/100)],\n    dt.bar[,.(Method,N,predictor,Measure=\"LPOCV-AUC\",Score=LPOCV_test/100,Lo=LPOCV_test/100,Hi=LPOCV_test/100)],\n    #dt.bar[,.(Method,N,predictor,Measure=\"LPOCV-AUC\",Score=LPOCV_test/100,Lo=LPOCV_test_lo/100,Hi=LPOCV_test_hi/100)],\n    dt.bar[,.(Method,N,predictor,Measure=\"BIC\",Score=BIC,Lo=BIC,Hi=BIC)],\n    dt.bar[,.(Method,N,predictor,Measure=\"AIC\",Score=AIC,Lo=AIC,Hi=AIC)]\n    )\n  }\n  ) %>% rbindlist\n\n  p.enet.lasso.tr<-ggplot(dt.enet.lasso.tr[Method==\"ENet\"], aes(N,Score,group=Measure)) +\n    geom_pointrange(aes(col=Measure,ymin=Lo, ymax=Hi),position=position_dodge(width=0.2), size=.9,alpha=.8) +\n    geom_line(aes(col=Measure),size=1,alpha=.8) +\n    scale_x_discrete(limits=2:10) +\n    scale_y_continuous(limits=c(0.7,max(dt.enet.lasso.tr$Score+10)),expand=c(0,0)) +\n    scale_color_manual(values=c(cbPalette[4],cbPalette[3],\"grey30\",cbPalette[2]), breaks=c(\"BIC\",\"AIC\",\"AUC\",\"LPOCV-AUC\")) +\n    labs(x=\"Number of predictor mRNA in the training model\",y=\"Score\") +\n    #facet_wrap(Method~.,ncol=2,scales=\"free_y\",strip.position=\"top\") +\n    ggbreak::scale_y_break(c(1, 25),scales=\"free\") +\n    theme_Publication() +\n    theme(legend.position=\"top\",\n      legend.key = element_rect(fill = \"transparent\"),\n      legend.background = element_rect(fill='transparent', linetype=\"solid\",color=\"black\",size=.2),\n      legend.box.background = element_rect(fill='transparent'),\n      axis.text.y.right = element_blank(),\n      axis.ticks.y.right = element_blank(),\n      axis.line.y.right = element_blank(),\n      plot.margin=unit(c(-3,0.2,0.2,0.2),\"cm\") \n    )\n```\n:::\n\n\n### Figure 3A-B {#sec-fig3merge}\n\n::: {.cell}\n\n```{.r .cell-code}\n  ##\n  library(patchwork)\n  #\n  pdf(file=\"Figures/cfRNA.KCV.ENet.tr.pdf\", width=11, height=17, title=\"ENet AUC on validation dataset\")\n  p.kcv / p.enet.lasso.tr + plot_annotation(tag_levels = 'A') + plot_layout(heights=c(1.3,1)) & theme(plot.tag = element_text(size = 27, face=\"bold\"))\n  dev.off()\n```\n:::\n\n\n## Figure 4 {#sec-fig4}\n![Figure 4 in the paper](static/figure/cfRNA.Fig4.png){#fig-fig4}\n\n### Figure 4A {#sec-fig4a}\n\n::: {.cell}\n\n```{.r .cell-code}\n  #########################################\n  ## Validation result using Enet & LASSO #\n  #########################################\n  dt.enet.lasso.val<-lapply(names(dl.enet.result), function(FN){\n    rbind(\n    dl.enet.result[[FN]][grepl(\"ENet\",methods),.(FN=FN,Method=\"ENet\",predictor,fold,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100)],\n    dl.enet.result[[FN]][grepl(\"LASSO\",methods),.(FN=FN,Method=\"LASSO\",predictor,fold,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100)]\n    )\n  }) %>% rbindlist\n  dt.enet.lasso.val[,FN:=substr(FN,2,length(FN))]\n  dt.enet.lasso.val$FN<-factor(dt.enet.lasso.val$FN,level=2:10)#<- # isa `char`\n  dt.enet.lasso.val[,Source:=ifelse(fold==\"Munchel\",fold,ifelse(grepl(\"preterm\",fold),\"Discovery\",\"Validation\"))]\n  xtabs(~fold+Source+Method, dt.enet.lasso.val)\n\n  # Mean validated AUC by GA and Method\n  dt.enet.lasso.val[fold==\"12wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC)),.(Method)]\n  dt.enet.lasso.val[fold==\"20wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC)),.(Method)]\n  dt.enet.lasso.val[fold==\"28wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC)),.(Method)]\n  dt.enet.lasso.val[fold==\"36wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC)),.(Method)]\n\n  # Mean validated AUC by GA merging the two methods\n  dt.enet.lasso.val[fold==\"12wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC))]\n  dt.enet.lasso.val[fold==\"20wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC))]\n  dt.enet.lasso.val[fold==\"28wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC))]\n  dt.enet.lasso.val[fold==\"36wk(term)\"][order(-AUC)][,.(.N,Mean=mean(AUC),SD=sd(AUC),Max=max(AUC),Min=min(AUC))]\n\n  # Best performing model by GA\n  dt.enet.lasso.val[Source==\"Validation\" & Method==\"ENet\",.(Method,fold,FN,predictor,AUC)][order(fold,-AUC)][,.SD[1],fold]\n  dt.enet.lasso.val[Source==\"Validation\" & Method==\"LASSO\",.(Method,fold,FN,predictor,AUC)][order(fold,-AUC)][,.SD[1],fold]\n\n  # get the best performing model by Lasso and ENet separately\n  dt.enet.lasso.val[Source==\"Validation\"][order(Method,fold,-AUC)][,.SD[1],.(Method,fold)] \n\n  #\n  dt.foo<-dt.enet.lasso.val[Source==\"Validation\"][,GA:=substr(fold,1,4)]\n  p.enet.lasso.val<-ggplot(dt.foo, aes(GA, AUC,col=Method)) + \n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi),position=position_dodge(width=0.7), size=.9,alpha=.8) +\n    scale_color_manual(values=c(\"grey30\",\"grey60\")) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ylab(\"AUC\") + xlab(\"Gestational age (validation dataset)\") +\n    facet_wrap(~FN,nrow=1) +\n    theme_Publication() + \n    theme(legend.position=\"top\",\n          axis.text.x = element_text(angle = 45, hjust=1, size=rel(.8)))\n  #\n  p.enet.lasso.val2<-ggplot(dt.foo, aes(FN, AUC,col=Method)) + \n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi),position=position_dodge(width=0.8), size=.8,alpha=.8) +\n    scale_color_manual(values=c(\"grey30\",\"grey60\")) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ylab(\"AUC\") + xlab(\"Number of predictor mRNA in the training model\") +\n    facet_grid(Source~GA) + \n    theme_Publication() + \n    theme(legend.position=\"top\")\n  #\n  dt.foo<-dt.enet.lasso.val[Source==\"Validation\" & Method==\"ENet\"][,GA:=substr(fold,1,4)]\n  p4.enet.lasso.val3<-ggplot(dt.foo, aes(FN, AUC)) + \n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi), size=.8,alpha=.8, col=\"grey30\") +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ylab(\"AUC\") + xlab(\"Number of predictor mRNA in the training model\") +\n    facet_grid(Source~GA) + \n    theme_Publication() +\n    theme(legend.position=\"top\", panel.border = element_rect(colour = \"black\"))\n\n  p4.enet.lasso.val4<-ggplot(dt.foo, aes(FN, AUC)) + \n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi,col=GA), position=position_dodge(width=.8), size=.8,alpha=.8) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ggsci::scale_color_jama() +\n    ylab(\"AUC\") + xlab(\"Number of predictor mRNA in the training model\") +\n    facet_grid(Source~.) + \n    theme_Publication() +\n    theme(legend.position=\"top\", panel.border = element_rect(colour = \"black\"))\n```\n:::\n\n\n### Figure 4B {#sec-fig4b}\n\n::: {.cell}\n\n```{.r .cell-code}\n  ########################################################################\n  ## Two univariable mRNA models (LEP and PAPPA2) + 2- and 3-mRNA models #\n  ########################################################################\n  #dt.best.result[predictor==\"LEP,LY6G6D,PAPPA2\",predictor:=\"LEP,PAPPA2,LY6G6D\"] # rename\n  dt.best.result<-dt.best.result[predictor!=\"LEP,LY6G6D,PAPPA2\"] # remove these rows\n  dt.best.result[,Source:=ifelse(fold==\"Munchel\",fold,ifelse(grepl(\"preterm\",fold),\"Discovery\",\"Validation\"))]\n\n  dt.best.result[Source==\"Discovery\"]\n  dt.best.result[Source==\"Validation\"]\n  dt.best.result[Source==\"Munchel\"][order(-AUC_test)]\n\n  dt.baz<-dt.best.result[Source!=\"Munchel\",.(Source,fold,predictor,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100)][,GA:=substr(fold,1,4)]\n  p4.top.model<-ggplot(dt.baz, aes(predictor, AUC)) + \n    geom_rect(data = dt.baz[Source==\"Discovery\" & GA==\"28wk\"],aes(fill = GA),fill=\"grey80\",xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf,alpha = 0.2) +\n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi),col=\"grey30\",size=.9,alpha=.8) +\n    scale_x_discrete(limits=dt.baz[,.N,predictor]$predictor) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ylab(\"AUC\") + xlab(\"mRNA(s) in the predictive models\") +\n    facet_grid(Source~GA) + \n    theme_Publication() +\n    theme(legend.position=\"\",\n          axis.text.x = element_text(angle = 45, hjust=1, size=rel(.8)), \n\t\t\t    axis.title.x = element_text(hjust = 1), # align the title to the right\n          panel.border = element_rect(colour = \"black\"))\n```\n:::\n\n\n### Figure 4C {#sec-fig4c}\n\n::: {.cell}\n\n```{.r .cell-code}\n  dt.qux<-dt.best.result[Source==\"Munchel\",.(Source,fold,predictor,AUC=AUC_test/100,AUC_lo=AUC_test_lo/100,AUC_hi=AUC_test_hi/100)]\n  p4.top.model.munchel<-ggplot(dt.qux, aes(predictor, AUC)) + \n    geom_pointrange(aes(ymin=AUC_lo, ymax=AUC_hi),col=\"grey30\",size=.9,alpha=.8) +\n    scale_x_discrete(limits=dt.baz[,.N,predictor]$predictor) +\n    scale_y_continuous(expand=c(0,0),breaks=c(0,.2,.4,.6,.8,1), limit=c(0,1.05)) +\n    ylab(\"AUC\") + xlab(\"\") +\n    facet_grid(Source~.) + #,nrow=1) +\n    theme_Publication() +\n    theme(axis.text.x = element_text(angle = 45, hjust=1, size=rel(.8)), \n          panel.border = element_rect(colour = \"black\"))\n```\n:::\n\n\n### Figure 4D {#sec-fig4d}\n\n::: {.cell}\n\n```{.r .cell-code}\n  # dt.roc.data from WF2.extra.bits2.Rmd\n  lazyLoad(\"WF2.extra.bits2_cache/beamer/roc_lep_pappa2_3110fa4c16ccfa47c784596b3531122d\")\n  p4.roc.curve<-ggplot(dt.roc.data, aes(1-specificity,sensitivity)) +\n    geom_rect(data = dt.roc.data[dataset==\"Discovery (28wk)\"], aes(xmin = -Inf,xmax = Inf, ymin = -Inf,ymax = Inf),fill=\"grey90\",alpha = 0.1) +\n    geom_line() +\n    geom_text(data=dt.roc,size=4,\n              mapping=aes(x=.55,y=.5,label=paste0(\"AUC=\",round(roc,3),\" (\",round(roc_lo,3),\", \",round(roc_hi,3),\")\"))\n              ) +\n    ylab(\"Sensitivity\") + xlab(\"1-Specificity\") +\n    facet_grid(geneName~dataset) +\n    theme_Publication() + \n    theme(legend.position=\"\",\n          axis.text.x = element_text(angle = 45, hjust=1), \n          panel.border = element_rect(colour = \"black\"))\n```\n:::\n\n\n### Figure 4A-D {#sec-fig4merge}\n\n::: {.cell}\n\n```{.r .cell-code}\n  p4.middle.right<-cowplot::plot_grid(NULL,p4.top.model.munchel,labels=c(\"\",\"C\"),ncol=1,label_size=27,rel_heights=c(1,1.5))\n  p4.middle<-cowplot::plot_grid(p4.top.model, p4.middle.right, labels=c(\"B\",\"\"),label_size=27,rel_widths=c(2.6,1))\n\n  pdf(file=\"Figures/cfRNA.Fig4.pdf\", width=11, height=17, title=\"Fig4: model selection and validation\")\n  cowplot::plot_grid(p4.enet.lasso.val3, p4.middle, p4.roc.curve, nrow=3,labels=c(\"A\",\"\",\"D\"),label_size=27,rel_heights=c(1,1.5,1.3), align=\"v\", axis=\"b\")\n  dev.off()\n```\n:::\n\n\n## Figure 5 {#sec-fig5}\n![Figure 5 in the paper](static/figure/cfRNA.Fig5.png){#fig-fig5}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n  load(\"RData/dt.cpmZ.preterm.POPS-2022.GRCh38.88.RData\") # dt.cpmZ (preterm)\n  load(\"RData/dt.cpmZ.term.POPS-2022.GRCh38.88.RData\") # dt.cpmZ.term (term)\n  load(\"RData/dt.cpmZ.munchel.RData\") # dt.cpmZ.munchel (Munchel)\n\n  dt.foo<-rbind(\n    dt.cpmZ[geneName %in% c(\"LEP\",\"PAPPA2\"),.(dataset=\"Discovery\",GA,Condition,geneName,logCPM,logCPMZ)],\n    dt.cpmZ.term[geneName %in% c(\"LEP\",\"PAPPA2\"),.(dataset=\"Validation\",GA,Condition,geneName,logCPM,logCPMZ)],\n    dt.cpmZ.munchel[geneName %in% c(\"LEP\",\"PAPPA2\"),.(dataset=\"Munchel\",GA=\"31wk\",Condition,geneName,logCPM,logCPMZ)]\n    )\n  dt.foo[,CPM:=2^logCPM]\n  dt.foo$Condition<-factor(dt.foo$Condition, level=c(\"Case\",\"Control\"))\n  dt.foo$dataset<-factor(dt.foo$dataset, level=c(\"Discovery\",\"Validation\",\"Munchel\"))\n\n  #\n  dt.foo[,summary(.SD),.(dataset,geneName),.SDcols=\"CPM\"]\n  dt.foo$CPM %>% summary\n\n  #######################################\n  # get the p-values (based on logCPMZ) #\n  #######################################\n  # by outcome\n  dt.pval<-dt.foo[,.(Pval=wilcox.test(logCPM~Condition)$p.value),.(dataset,GA,geneName)]\n  dt.pval[,Condition:=\"Case\"] # ggsignif complains without this\n\n  # by GA\n  dt.pval28.36<-dt.foo[GA %in% c(\"28wk\",\"36wk\") & dataset==\"Validation\",.(Pval=wilcox.test(logCPM~GA)$p.value),.(dataset,geneName)][,`:=` (`GA1`=\"28wk\",GA2=\"36wk\")]\n  dt.pval28.36[,Condition:=\"Case\"] # ggsignif complains without this\n\n  dt.pval20.28<-dt.foo[GA %in% c(\"20wk\",\"28wk\"),.(Pval=wilcox.test(logCPM~GA)$p.value),.(dataset,geneName)][,`:=` (`GA1`=\"20wk\",GA2=\"28wk\")]\n  dt.pval20.28[,Condition:=\"Case\"] # ggsignif complains without this\n\n  dt.pval12.20<-dt.foo[GA %in% c(\"12wk\",\"20wk\"),.(Pval=wilcox.test(logCPM~GA)$p.value),.(dataset,geneName)][,`:=` (`GA1`=\"12wk\",GA2=\"20wk\")]\n  dt.pval12.20[,Condition:=\"Case\"] # ggsignif complains without this\n\n  dt.foo$Condition<-relevel(dt.foo$Condition, ref=\"Control\")\n\n  #\n  #\n  p5.lep.pappa2.sig<- ggplot(dt.foo, aes(GA, CPM, col=Condition)) +\n    geom_boxplot(outlier.shape=NA,width=.7,size=.5,alpha=.8) +\n    geom_point(pch = 21, size=2.5, position = position_jitterdodge(), alpha=.7) +\n    scale_y_continuous(trans = scales::log2_trans(),\n                       breaks = scales::trans_breaks(\"log2\",n=5, function(x) 2^x),\n                       labels = scales::trans_format(\"log2\", scales::math_format(2^.x)),\n                        limits=c(min(dt.foo$CPM),max(dt.foo$CPM)*10)) +\n    annotation_logticks(base=2,sides=\"l\") +\n    ggsci::scale_color_jama() +\n    ggsignif::geom_signif(data=dt.pval, \n                          aes(xmin = GA, xmax = GA, annotations = format(Pval, scientific=T,digits=2), y_position = 10),\n                          textsize = 5, vjust = -0.2, tip_length=0.01,\n                          manual = TRUE, color=\"black\") +\n    ggsignif::geom_signif(data=dt.pval28.36, \n                          aes(xmin = GA1, xmax = GA2, annotations = format(Pval, scientific=T,digits=2), y_position = 8.5),\n                          textsize = 5, vjust = -0.2, tip_length=0.03,\n                          manual = TRUE, color=\"black\") +\n    ggsignif::geom_signif(data=dt.pval20.28, \n                          aes(xmin = GA1, xmax = GA2, annotations = format(Pval, scientific=T,digits=2), y_position = 7.5),\n                          textsize = 5, vjust = -0.2, tip_length=0.03,\n                          manual = TRUE, color=\"black\") +\n    ggsignif::geom_signif(data=dt.pval12.20, \n                          aes(xmin = GA1, xmax = GA2, annotations = format(Pval, scientific=T,digits=2), y_position = 6.5),\n                          textsize = 5, vjust = -0.2, tip_length=0.03,\n                          manual = TRUE, color=\"black\") +\n    ylab(\"Count Per Million\") + xlab(\"Gestational Age\") +\n    facet_grid(geneName~dataset, scales=\"free_x\", space=\"free_x\") +\n    theme_Publication() +theme (panel.border = element_rect(colour = \"black\"),legend.position=\"top\")\n\n  #\n  pdf(file=\"Figures/cfRNA.Fig5.sig.pdf\", width=11, height=8.5, title=\"Fig5: Abundance of LEP and PAPPA2\")\n  p5.lep.pappa2.sig\n  dev.off()\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}